on:
  push:
    branches:
    - master
    tags:
    - '*'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  QT_VERSION: "6.5"

jobs:

#   #========================================================================
#   debian12_svmtoolpp:
#     name: "Build the package for Debian 12"
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Free Disk Space (Ubuntu)
#         uses: jlumbroso/free-disk-space@v1.2.0
#         with:
#           # this might remove tools that are actually needed,
#           # if set to "true" but frees about 6 GB
#           tool-cache: false
#           # all of these default to true, but feel free to set to
#           # "false" if necessary for your workflow
#           android: true
#           dotnet: true
#           haskell: true
#           large-packages: false
#           swap-storage: true
#       - name: Build image
#         run: docker build -f ./Dockerfile-debian12 -t aymara/svmtoolpp-debian12:build .
#       - name: Extract package and version number from docker image
#         id: extract
#         shell: bash
#         run: |
#              dockerImage="aymara/svmtoolpp-debian12:build"
#              packageDir="/usr/share/apps/svmtoolpp/packages/"
#              cicd/extract_package.sh $dockerImage $packageDir $GITHUB_OUTPUT
#       - name: Upload nightly build package
#         if: ${{ !startsWith(github.ref, 'refs/tags/') }}
#         shell: bash
#         run: |
#           tagName=${{ steps.extract.outputs.version }}-nightly
#           gh release create --prerelease ${tagName} || /bin/true
#           gh release upload ${tagName} --clobber ./${{ steps.extract.outputs.filename }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - name: Upload release package
#         uses: softprops/action-gh-release@v1
#         if: ${{ startsWith(github.ref, 'refs/tags/') }}
#         with:
#           name: ${{ steps.extract.outputs.version }}
#           files: |
#             ./${{ steps.extract.outputs.filename }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#   #========================================================================
#   ubuntu22_04_svmtoolpp:
#     name: "Build the package for Ubuntu 22.04"
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Free Disk Space (Ubuntu)
#         uses: jlumbroso/free-disk-space@v1.2.0
#         with:
#           # this might remove tools that are actually needed,
#           # if set to "true" but frees about 6 GB
#           tool-cache: false
#           # all of these default to true, but feel free to set to
#           # "false" if necessary for your workflow
#           android: true
#           dotnet: true
#           haskell: true
#           large-packages: false
#           swap-storage: true
#       - name: Build image
#         run: docker build -f ./Dockerfile-ubuntu22.04 -t aymara/svmtoolpp-ubuntu22.04:build .
#       - name: Extract package and version number from docker image
#         id: extract
#         shell: bash
#         run: |
#              dockerImage="aymara/svmtoolpp-ubuntu22.04:build"
#              packageDir="/usr/share/apps/svmtoolpp/packages/"
#              cicd/extract_package.sh $dockerImage $packageDir $GITHUB_OUTPUT
#       - name: Upload nightly build package
#         if: ${{ !startsWith(github.ref, 'refs/tags/') }}
#         shell: bash
#         run: |
#           tagName=${{ steps.extract.outputs.version }}-nightly
#           gh release create --prerelease ${tagName} || /bin/true
#           gh release upload ${tagName} --clobber ./${{ steps.extract.outputs.filename }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - name: Upload release package
#         uses: softprops/action-gh-release@v1
#         if: ${{ startsWith(github.ref, 'refs/tags/') }}
#         with:
#           name: ${{ steps.extract.outputs.version }}
#           files: |
#             ./${{ steps.extract.outputs.filename }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
  #========================================================================
  manylinux_2_28_svmtoolpp:
    name: "Build the package for Manylinux 2.28"
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.AYMARA_DOCKERHUB_USERNAME }}
          password: ${{ secrets.AYMARA_DOCKERHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v3
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.2.0
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          swap-storage: true
      - name: Build image
        run: docker build -f ./Dockerfile-manylinux2.28 -t aymara/svmtoolpp-manylinux2.28-qt${QT_VERSION}:latest .
      - name: "Push image"
        run: docker push aymara/svmtoolpp-manylinux2.28-qt${QT_VERSION}:latest
